[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["mili_env"]

[project]
name = "mili_env"
dynamic = ["version", "dependencies"]
version = "0.0.1"
authors = [{ name = "Paul Zeinaty", email = "zeinatypol@gmail.com" }]
maintainers = [{ name = "Paul Zeinaty", email = "zeinatypol@gmail.com" }]
description = "A Gymnasium RL Project"
readme = "README.md"
license = { file = "LICENSE" }
keywords = ["gymnasium", "pygame", "autonomous", "reinforcement", "learning"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
]
dependencies = [
  "gymnasium",
  "pygame>=2.1.3",
  "pre-commit",
]

[tool.hatch.metadata.hooks.requirements_txt]
files = ["requirements.txt"]


[tool.hatch.version]
source = "vcs"

[tool.pyright]
venvPath = "."
venv = ".venv"

[tool.ruff]
line-length = 120

fix = true

lint.pydocstyle.convention = "google"

format.docstring-code-format = true
format.docstring-code-line-length = 120

lint.select = ["ALL"]

lint.ignore = ["COM812", "ISC001", "D100", "S311"]

lint.per-file-ignores = { "**/examples/*" = [
  "ANN",
  "D",
  "INP001",
  "T201",
], "**/tests/**/*" = [
  "ANN",
  "D",
  "INP001",
  "PLC1901",
  "PLR2004",
  "PLR6301",
  "S",
  "TID252",
], "src/**/*.py" = [
    "PLR2004", # Magic value used in comparison, ...
    "S311", # Standard pseudo-random generators are not suitable for cryptographic purposes
]}

lint.flake8-tidy-imports.ban-relative-imports = "all"

lint.flake8-pytest-style.fixture-parentheses = false
lint.flake8-pytest-style.mark-parentheses = false
